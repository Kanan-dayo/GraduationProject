//==========================================================================================================================================================
//
// チャット用テキスト処理 [ chatText.cpp ]
// Author : KANAN NAGANAWA
//
//==========================================================================================================================================================
#include "chatText.h"
#include "renderer.h"
#include "manager.h"
#include "keyboard.h"
#include "input.h"
#include "client.h"
#include "chatTab.h"

//==========================================================================================================================================================
// マクロ定義
//==========================================================================================================================================================
#define CHARACTER_HEIGHT		(18)				// 文字の高さ
#define CHARACTER_WIDTH			(0)					// 文字の幅
#define CHARACTER_LINE_WEIGHT	(15)					// 文字の太さ
#define CHARACTER_FONTNAME		("ＭＳ ゴシック")	// 文字のフォント名

#define MAXCHAR_ONELINE			(30)				// 一行に収まる最大の文字数

//==========================================================================================================================================================
// 静的メンバ変数
//==========================================================================================================================================================
LPD3DXFONT			CChatText::m_pFont						= NULL;

//==========================================================================================================================================================
// 初期化
//==========================================================================================================================================================
void CChatText::Init(void)
{
	m_col = WhiteColor;
}

//==========================================================================================================================================================
// 終了
//==========================================================================================================================================================
void CChatText::Uninit(void)
{

}

//==========================================================================================================================================================
// 更新
//==========================================================================================================================================================
void CChatText::Update(void)
{
	//if (CChatTab::GetTabState() == CChatTab::TABSTATE_OPENNING ||
	//	CChatTab::GetTabState() == CChatTab::TABSTATE_CLOSING)
	//{
	//	// タブの座標を取得
	//	D3DXVECTOR2 TabPos = CChatTab::GetTabPos();
	//	// 座標更新
	//	m_leftText.rect =	{ (LONG)(TabPos.x + DIFPOS_X_MAXCHAR),
	//						(LONG)(TabPos.y - DIFPOS_Y_MAXCHAR),
	//						SCREEN_WIDTH,
	//						SCREEN_HEIGHT };
	//	// 座標更新
	//	m_writeText.rect =	{ (LONG)(TabPos.x + DIFPOS_X_SENDTEXT),
	//						(LONG)(TabPos.y - DIFPOS_Y_SENDTEXT),
	//						SCREEN_WIDTH,
	//						SCREEN_HEIGHT };
	//}
}

//==========================================================================================================================================================
// 描画
//==========================================================================================================================================================
void CChatText::Draw(void)
{
	// 文字数を計算
	int nLenText = (int)m_text.size();
	// 無ければ終了
	if (nLenText <= 0)
		return;

	// 行数を格納
	int nLine = nLenText / MAXCHAR_ONELINE + 1;

	char *cWriteText = new char[MAXCHAR_ONELINE];
	RECT rect = m_rect;

	// 行数分だけ繰り返す
	for (int nCnt = 0; nCnt < nLine; nCnt++)
	{
		strcpy(cWriteText, "");

		// 文章を30文字毎に切り分ける
		std::string str = m_text.substr(nCnt * MAXCHAR_ONELINE, MAXCHAR_ONELINE);
		strcpy(cWriteText, str.c_str());

		// 右端で改行
		if (nCnt != 0)
			rect.top += CHARACTER_HEIGHT;

		// テキスト描画
		m_pFont->DrawText(NULL,
			cWriteText,
			-1,
			&rect,
			DT_LEFT,
			m_col);
	}
}

//==========================================================================================================================================================
// チャットテキストの生成
//==========================================================================================================================================================
CChatText * CChatText::Create(void)
{
	CChatText *Text = new CChatText;

	if (!Text)
		return nullptr;

	Text->Init();

	return Text;
}

//==========================================================================================================================================================
// フォントのロード
//==========================================================================================================================================================
HRESULT CChatText::LoadFont(void)
{
	// デバッグ表示用フォントを設定
	D3DXCreateFont(CManager::GetRenderer()->GetDevice(),	// デバイス
		CHARACTER_HEIGHT,		// 文字の高さ
		CHARACTER_WIDTH,		// 文字の幅
		CHARACTER_LINE_WEIGHT,	// 文字の太さ
		0,						// ミップマップレベルの数
		TRUE,					// 文字の斜体化
		SHIFTJIS_CHARSET,		// フォントの文字セット
		OUT_DEFAULT_PRECIS,
		DEFAULT_QUALITY,
		DEFAULT_PITCH,
		CHARACTER_FONTNAME,		// 文字のフォント名
		&m_pFont);				// 格納先

	return S_OK;
}

//==========================================================================================================================================================
// フォントの破棄
//==========================================================================================================================================================
void CChatText::UnloadFont(void)
{
	if (m_pFont != NULL)
	{
		m_pFont->Release();
		m_pFont = NULL;
	}
}
