//------------------------------------------------------------------------------
//
//モジュールのランプとワイヤーのやつの処理  [Module_No2_LampAndWire.cpp]
//Author:Yoshiki Hosoya
//
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//インクルード
//------------------------------------------------------------------------------
#include "module_parts_No3_Button.h"
#include "module_No3_PassWord.h"
#include "modelinfo.h"
#include "manager.h"
#include "keyboard.h"
#include "game.h"
#include "particle.h"
#include "mouse.h"
#include "sound.h"

//------------------------------------------------------------------------------
//静的メンバ変数の初期化
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//マクロ
//------------------------------------------------------------------------------
#define WURE_OFFSET					(D3DXVECTOR3(-37.0f,20.0f,-23.0f))
#define WURE_ITNERVAL				(D3DXVECTOR3(12.0f,0.0f,0.0f))
#define WIRE_NUM					(6)
#define LAMP_OFFSET					(D3DXVECTOR3(-28.0f,-5.0f,-30.0f))
#define LAMP_INTERVAL				(D3DXVECTOR3(9.0f,0.0f,0.0f))
#define LAMP_NUM					(8)

//------------------------------------------------------------------------------
//コンストラクタ
//------------------------------------------------------------------------------
CModule_No3_PassWord::CModule_No3_PassWord()
{
	m_nSelectPlace = 0;
}

//------------------------------------------------------------------------------
//デストラクタ
//------------------------------------------------------------------------------
CModule_No3_PassWord::~CModule_No3_PassWord()
{

}
//------------------------------------------------------------------------------
//初期化処理
//------------------------------------------------------------------------------
HRESULT CModule_No3_PassWord::Init()
{
	//モデル情報設定
	BindModelInfo(CModelInfo::GetModelInfo(CModelInfo::MODEL_MODULE_NO2));

	//ワイヤー生成
	CreateButton();

	//クリアランプ生成
	CModule_Base::CreateLamp();

	//初期化
	CSceneX::Init();

	return S_OK;
}

//------------------------------------------------------------------------------
//更新処理
//------------------------------------------------------------------------------
void CModule_No3_PassWord::Update()
{
	CSceneX::Update();
}
//------------------------------------------------------------------------------
//描画処理
//------------------------------------------------------------------------------
void CModule_No3_PassWord::Draw()
{
	CSceneX::Draw();
}
//------------------------------------------------------------------------------
//デバッグ情報表記
//------------------------------------------------------------------------------
void CModule_No3_PassWord::ShowDebugInfo()
{
#ifdef _DEBUG
	CModule_Base::ShowDebugInfo();

#endif //DEBUG
}

//------------------------------------------------------------------------------
//モジュール操作
//------------------------------------------------------------------------------
void CModule_No3_PassWord::Operation_Keyboard()
{
	int nSelectNumOld = m_nSelectPlace;

	//選択処理
	CHossoLibrary::Selecting(m_nSelectPlace, nSelectNumOld, 6, 1);

	//モジュール操作
	CModule_Base::Operation_Keyboard();

}


//------------------------------------------------------------------------------
//モジュール操作　マウス
//------------------------------------------------------------------------------
void CModule_No3_PassWord::Operation_Mouse()
{
	//レイの判定
	CHossoLibrary::RayCollision_ModuleSelect(m_pButtonList.begin(), m_pButtonList.end(), (int&)m_nSelectPlace);

	//マウス操作
	CModule_Base::Operation_Mouse();

}

//------------------------------------------------------------------------------
//モジュールアクション
//------------------------------------------------------------------------------
void CModule_No3_PassWord::ModuleAction()
{


}

//------------------------------------------------------------------------------
//モジュールの選択解除
//------------------------------------------------------------------------------
void CModule_No3_PassWord::ModuleCancel()
{
	//選択解除
	//CModule_Base::ModuleParts_Select<CModule_Parts_No2_Wire>(m_pButtonList, -1);
}


//------------------------------------------------------------------------------
//ワイヤー生成
//------------------------------------------------------------------------------
void CModule_No3_PassWord::CreateButton()
{

}

//------------------------------------------------------------------------------
//切るべきワイヤー設定
//------------------------------------------------------------------------------
void CModule_No3_PassWord::CheckClear()
{
	//int nCount = std::count_if(m_pButtonList.begin(), m_pButtonList.end(),
	//	[](S_ptr<CModule_Parts_No3_Button> ptr) {return ptr->GetClearFlag(); });

	//if (nCount <= 0)
	//{
	//	Module_Clear();
	//}
}